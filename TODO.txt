TODO:
v1:
params
Runtime library
Parameters using byref semantics
Dynamic
Static constructors and fields (and field init)
Const fields
User-defined conversions (probably needed for the runtime library to work as intended).
Improve error handling (error numbers, error positions)
Scan for unsupported constructs (yield/async/goto (incl. goto case)/query/user-defined operators).
Verify that all directly or indirectly dependent assemblies are referenced.
The metadata importer should be allowed to write attributes to the output reference assembly.
Prevent creating a class that inherits/implements types with members with the same names.
Cannot declare a static field called Name.
Need to support type references in InlineCode. Also need to support param arrays and the possibility to transform the string "XYZ" to add_XYZ.

v2:
yield
async
goto
User-defined operators
Query comprehension
Other reference importers.


Script# features to handle:
ScriptAssemblyAttribute.
ScriptQualifierAttribute.
ScriptNamespaceAttribute specified on assembly.
ResourcesAttribute.
MixinAttribute.
NamedValuesAttribute and NumericValuesAttribute.
[Flags] on enums represented as "true" for the last parameter to registerEnum.
QUnit tests


Runtime library:

Add type Int32. typeof(double) == Number, number.__typeName should be 'Double'
Improve exception structure.
typeof(string), etc. should return valid types with interfaces.
Remove class System.Number (should be System.Double)

ObservableCollection: Inherit IList<T>, ensure works.
Queue, Queue<T>: Ensure works
Stack, Stack<T>: Ensure works
Arguments: Ensure works
Date: Ensure operators work (requires user-defined operators in the compiler)
Function: Move members to Delegate
Record: Ensure works
Script: Ensure works
String: Operators, ensure methods with character arguments work (eg. + )
StringBuilder: Add Append(char)
XmlNodeList

Number refactoring, incl. integer division, truncation
Byte, SByte, Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, Double, Decimal

Exception refactoring
Inline code reference issues in JsDictionary and JsDictionary<,>